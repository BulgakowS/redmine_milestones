<div style='height: 10px'>
</div>
<div id="milestone_#{milestone.id}" class="milestone">
  <%= image_tag('milestone.png', :plugin=>'redmine_milestones', :style=>'vertical-align: top; float: left') %>
  <div style="display: padding-left: 20px">
    <h3>
      <%= link_to milestone.project.id == @project.id ? milestone.name : "#{milestone.project.name}/#{milestone.name}", milestone_path(milestone) %>
    </h3>
    <p>
      <%=  milestone.description %>
    </p>
    <% if milestone.completed? %>
        <p><%= milestone.actual_date.strftime('%d-%m-%Y') if milestone.actual_date.present? %></p>
    <% elsif milestone.actual_date %>
        <p style='text-decoration: underline'  title="<%= t(:Actual_date)%> "><strong><%= due_date_distance_in_words(milestone.actual_date) %> (Actual: <%= milestone.actual_date.strftime('%d/%m/%Y') %>)</strong> owner: <%= milestone.user.name if milestone.user.present? %></p>
    <% elsif milestone.planned_end_date %>
        <p><strong title="<%= t(:label_planned_due_date) %>"><%= due_date_distance_in_words(milestone.planned_end_date) %> (Planned: <%= milestone.planned_end_date.strftime('%d/%m/%Y') %>)</strong> owner: <%= milestone.user.name if milestone.user.present? %></p>
    <% end %>
        <% if milestone.issues_count > 0 %>
            <%= progress_bar([milestone.closed_pourcent, milestone.completed_pourcent], :width => '35em', :legend => '%0.0f%' % milestone.completed_pourcent) %>
            <p class="progress-info">
              <%= link_to_if(milestone.closed_issues_count > 0, l(:label_x_closed_issues_abbr, :count => milestone.closed_issues_count), :controller => 'issues', :action => 'index', :project_id => milestone.project, :status_id => 'c', :milestone => milestone, :set_filter => 1) %>
              (<%= '%0.0f' % (milestone.closed_issues_count.to_f / milestone.issues_count * 100) %>%)
              &#160;
              <%= link_to_if(milestone.open_issues_count > 0, l(:label_x_open_issues_abbr, :count => milestone.open_issues_count), :controller => 'issues', :action => 'index', :project_id => milestone.project, :status_id => 'o', :milestone => milestone, :set_filter => 1) %>
              <% logger.info "====================== #{milestone.open_issues_count.to_f} / #{milestone.issues_count} ==============" %>
              (<%= '%0.0f' % (milestone.open_issues_count.to_f / milestone.issues_count * 100) %>%)
            </p>
        <% else %>
            <p class="progress-info"><%= l(:label_roadmap_no_issues_for_milestone) %></p>
        <% end %>
    </div>
  <% unless milestone.issues.empty? %>
      <% form_tag({}) do -%>
          <table class="list related-issues">
            <caption><%= l(:label_related_issues) %></caption>
            <% milestone.issues.visible.each do |issue| -%>
                <tr class="hascontextmenu">
                  <td><%= link_to_issue(issue, :project => (@project != issue.project)) %></td>
                </tr>
            <% end -%>
          </table>
      <% end %>
  <% end %>
  <% visited_milestones ||= Set.new %>
  <% visited_milestones << milestone.id %>
  <% unless milestone.children.empty? %>
      <% @default_show_sub_milestones = MilestonesSettings.find_or_create_by_project_id_and_key(@project.id, "default_show_sub_milestones") %>
      <% if ((@default_show_sub_milestones.enabled? and not params[:hide_sub_milestones] == '1') or (@default_show_sub_milestones.disabled? and params[:show_sub_milestones])) or @milestone.present? %>
        <% if params[:completed_milestones] %>
          <%= render :partial => "milestones/milestone", :collection => milestone.children.reject{|x| visited_milestones.include? x.id}, :locals => {:visited_milestones => visited_milestones} %>
        <% else %>
          <%= render :partial => "milestones/milestone", :collection => milestone.children.opened.reject{|x| visited_milestones.include? x.id}, :locals => {:visited_milestones => visited_milestones} %>
        <% end %>
    <% else %>
          <% if params[:completed_milestones] %>
              <%= render :partial => "milestones/milestone", :collection => milestone.children.for_project(@project).reject{|x| visited_milestones.include? x.id}, :locals => {:visited_milestones => visited_milestones} %>
          <% else %>
              <%= render :partial => "milestones/milestone", :collection => milestone.children.for_project(@project).opened.reject{|x| visited_milestones.include? x.id}, :locals => {:visited_milestones => visited_milestones} %>
          <% end %>
<% end %>
  <% end %>
</div>
